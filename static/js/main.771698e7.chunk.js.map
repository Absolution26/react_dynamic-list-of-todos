{"version":3,"sources":["components/TodoItem/Todoitem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoItem","_ref","todo","getUserAction","selectedTodo","id","completed","title","_jsxs","className","cn","children","_jsx","type","onClick","TodoList","todos","length","map","TodoFilter","onChangeStatus","inputValue","onChangeInput","onClickReset","onChange","event","value","placeholder","style","pointerEvents","get","url","fullURL","delay","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","actionClose","changeSelectedTodo","selectedUser","setSelectedUser","useState","useEffect","userId","concat","href","email","name","Status","App","setTodos","status","setStatus","all","isLoad","setIsLoad","searchInput","setSearchInput","selectedModalTodo","setSelectedModalTodo","filteredTodosByStatus","useMemo","filter","active","todoList","finally","_Fragment","target","trimStart","includes","toLowerCase","trim","filteredByMatch","resetSearchInput","closeModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.771698e7.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo,\n  getUserAction: (id: Todo) => void,\n  selectedTodo: Todo | null,\n}\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  getUserAction,\n  selectedTodo,\n}) => {\n  const {\n    id, completed, title,\n  } = todo;\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': selectedTodo?.id === id,\n      })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span\n            className=\"icon\"\n            data-cy=\"iconCompleted\"\n          >\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            getUserAction(todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i className={cn('far',\n              {\n                'fa-eye': selectedTodo?.id !== id,\n                'fa-eye-slash': selectedTodo?.id === id,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\n\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  getUserAction: (id: Todo) => void,\n  selectedTodo: Todo | null,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  getUserAction,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.length > 0 && todos.map(todo => (\n        <TodoItem\n          todo={todo}\n          getUserAction={getUserAction}\n          selectedTodo={selectedTodo}\n          key={todo.id}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","interface Props {\n  onChangeStatus: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  inputValue: string,\n  onChangeInput: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  onClickReset: () => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  onChangeStatus,\n  inputValue,\n  onChangeInput,\n  onClickReset,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => onChangeStatus(event)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={inputValue}\n          onChange={event => onChangeInput(event)}\n          placeholder=\"Search...\"\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onClickReset()}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ninterface Props {\n  actionClose: () => void,\n  selectedTodo: Todo,\n  changeSelectedTodo: (el: Todo | null) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  actionClose,\n  selectedTodo,\n  changeSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(res => setSelectedUser(res));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {selectedUser\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  actionClose();\n                  changeSelectedTodo(null);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  )\n                  : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n\n                {' by '}\n\n                <a href={`mailto:${selectedUser?.email}`}>\n                  {selectedUser?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n        : <Loader />}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nenum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [status, setStatus] = useState<string>(Status.all);\n  const [isLoad, setIsLoad] = useState(true);\n  const [searchInput, setSearchInput] = useState('');\n  const [selectedModalTodo, setSelectedModalTodo] = useState<Todo | null>(null);\n\n  const filteredTodosByStatus = useMemo(() => {\n    return todos.filter(todo => {\n      if (status === Status.active) {\n        return !todo.completed;\n      }\n\n      if (status === Status.completed) {\n        return todo.completed;\n      }\n\n      return true;\n    });\n  }, [todos, status]);\n\n  useEffect(() => {\n    getTodos().then(todoList => setTodos(todoList)).finally(() => setIsLoad(false));\n  }, []);\n\n  const filteredByMatch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchInput(event.target.value.trimStart());\n\n    return filteredTodosByStatus.filter(todo => todo.title.includes(event.target.value.toLowerCase().trim()));\n  };\n\n  const visibleTodos = () => {\n    return filteredTodosByStatus.filter(todo => todo.title.toLowerCase().trim().includes(searchInput))\n      || filteredTodosByStatus;\n  };\n\n  const resetSearchInput = () => {\n    setSearchInput('');\n  };\n\n  const closeModal = () => {\n    setSelectedModalTodo(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChangeStatus={event => setStatus(event.target.value)}\n                inputValue={searchInput}\n                onChangeInput={(event) => filteredByMatch(event)}\n                onClickReset={resetSearchInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              <TodoList\n                todos={visibleTodos()}\n                getUserAction={setSelectedModalTodo}\n                selectedTodo={selectedModalTodo}\n              />\n              {isLoad && (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedModalTodo && (\n        <TodoModal\n          selectedTodo={selectedModalTodo}\n          actionClose={closeModal}\n          changeSelectedTodo={setSelectedModalTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}